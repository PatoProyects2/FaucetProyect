{
  "contractName": "TransactionFee",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEVELOPER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_fee",
          "type": "uint16"
        }
      ],
      "name": "setTransactionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDevsFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_fee",
          "type": "uint16"
        }
      ],
      "name": "setDevsFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBurnFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_fee",
          "type": "uint16"
        }
      ],
      "name": "setBurnFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHolderFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_fee",
          "type": "uint16"
        }
      ],
      "name": "setHolderFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "addDev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "removeDev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEVELOPER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"addDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDevsFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHolderFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"removeDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setBurnFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setDevsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setHolderFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"setTransactionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getBurnFee()\":{\"details\":\"Get burn fee for every transaction\"},\"getDevsFee()\":{\"details\":\"Get devs fee for every transaction\"},\"getHolderFee()\":{\"details\":\"Get holder fee for every transaction\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getTransactionFee()\":{\"details\":\"Get transaction fee to pay for every transaction\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setBurnFee(uint16)\":{\"details\":\"Set burn fee for every transaction\"},\"setDevsFee(uint16)\":{\"details\":\"Set devs fee for every transaction\"},\"setHolderFee(uint16)\":{\"details\":\"Set holder fee for every transaction\"},\"setTransactionFee(uint16)\":{\"details\":\"Set transaction fee to pay for every transaction\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"burnFee\":{\"details\":\"Burn percentage of the transaction fee 50%\"},\"devFee\":{\"details\":\"Developers fee of the transaction 25%\"},\"feeTransaction\":{\"details\":\"Transaction fee 0.7%\"},\"holderFee\":{\"details\":\"Holder fee of the transaction 25%\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/library/TransactionFee.sol\":\"TransactionFee\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36\",\"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"project:/contracts/library/TransactionFee.sol\":{\"keccak256\":\"0xec549fcb31e2dca991a488adf231c406fc974f26e708da70e641c10379451a75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ba6a94bc434469661287e829cb05e4a456834cedffbfa0434883ea66c370860\",\"dweb:/ipfs/QmXrvVKtoYqZeiNkvVyDcmUCWamJLB2zgmDe9mga2HpWgK\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\r\n\r\nabstract contract TransactionFee is ERC20, AccessControlEnumerable {\r\n  bytes32 public constant DEVELOPER_ROLE = keccak256(\"DEVELOPER_ROLE\");\r\n\r\n  /**\r\n   * @dev Transaction fee 0.7%\r\n   */\r\n  uint16 feeTransaction = 70;\r\n  /**\r\n   * @dev Burn percentage of the transaction fee 50%\r\n   */\r\n  uint16 burnFee = 5000;\r\n  /**\r\n   * @dev Developers fee of the transaction 25%\r\n   */\r\n  uint16 devFee = 2500;\r\n  /**\r\n   * @dev Holder fee of the transaction 25%\r\n   */\r\n  uint16 holderFee = 2500;\r\n\r\n  constructor() {\r\n    _setupRole(DEVELOPER_ROLE, _msgSender());\r\n  }\r\n\r\n  /**\r\n   * @dev Get transaction fee to pay for every transaction\r\n   */\r\n  function getTransactionFee() public view returns (uint16) {\r\n    return feeTransaction;\r\n  }\r\n\r\n  /**\r\n   * @dev Set transaction fee to pay for every transaction\r\n   */\r\n  function setTransactionFee(uint16 _fee) external {\r\n    feeTransaction = _fee;\r\n  }\r\n\r\n  /**\r\n   * @dev Get devs fee for every transaction\r\n   */\r\n  function getDevsFee() public view returns (uint16) {\r\n    return devFee;\r\n  }\r\n\r\n  /**\r\n   * @dev Set devs fee for every transaction\r\n   */\r\n  function setDevsFee(uint16 _fee) external {\r\n    devFee = _fee;\r\n  }\r\n\r\n  /**\r\n   * @dev Get burn fee for every transaction\r\n   */\r\n  function getBurnFee() public view returns (uint16) {\r\n    return burnFee;\r\n  }\r\n\r\n  /**\r\n   * @dev Set burn fee for every transaction\r\n   */\r\n  function setBurnFee(uint16 _fee) external {\r\n    burnFee = _fee;\r\n  }\r\n\r\n  /**\r\n   * @dev Get holder fee for every transaction\r\n   */\r\n  function getHolderFee() public view returns (uint16) {\r\n    return holderFee;\r\n  }\r\n\r\n  /**\r\n   * @dev Set holder fee for every transaction\r\n   */\r\n  function setHolderFee(uint16 _fee) external {\r\n    holderFee = _fee;\r\n  }\r\n\r\n  function addDev(address _wallet) external {\r\n    grantRole(DEVELOPER_ROLE, _wallet);\r\n  }\r\n\r\n  function removeDev(address _wallet) external {\r\n    revokeRole(DEVELOPER_ROLE, _wallet);\r\n  }\r\n}\r\n",
  "sourcePath": "C:\\Escritorio\\Estudio\\FaucetProyect\\contracts\\library\\TransactionFee.sol",
  "ast": {
    "absolutePath": "project:/contracts/library/TransactionFee.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "AccessControlEnumerable": [
        433
      ],
      "Context": [
        3189
      ],
      "ERC165": [
        3416
      ],
      "ERC20": [
        1182
      ],
      "EnumerableSet": [
        4115
      ],
      "IAccessControl": [
        506
      ],
      "IAccessControlEnumerable": [
        531
      ],
      "IERC165": [
        3428
      ],
      "IERC20": [
        1260
      ],
      "IERC20Metadata": [
        1285
      ],
      "Strings": [
        3392
      ],
      "TransactionFee": [
        4811
      ]
    },
    "id": 4812,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4671,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:25"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4672,
        "nodeType": "ImportDirective",
        "scope": 4812,
        "sourceUnit": 1183,
        "src": "69:55:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "id": 4673,
        "nodeType": "ImportDirective",
        "scope": 4812,
        "sourceUnit": 434,
        "src": "126:68:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4674,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1182,
              "src": "234:5:25"
            },
            "id": 4675,
            "nodeType": "InheritanceSpecifier",
            "src": "234:5:25"
          },
          {
            "baseName": {
              "id": 4676,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 433,
              "src": "241:23:25"
            },
            "id": 4677,
            "nodeType": "InheritanceSpecifier",
            "src": "241:23:25"
          }
        ],
        "contractDependencies": [
          308,
          433,
          506,
          531,
          1182,
          1260,
          1285,
          3189,
          3416,
          3428
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 4811,
        "linearizedBaseContracts": [
          4811,
          433,
          308,
          3416,
          3428,
          531,
          506,
          1182,
          1285,
          1260,
          3189
        ],
        "name": "TransactionFee",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "9103a0e0",
            "id": 4682,
            "mutability": "constant",
            "name": "DEVELOPER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "270:68:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4678,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "444556454c4f5045525f524f4c45",
                  "id": 4680,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "321:16:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c",
                    "typeString": "literal_string \"DEVELOPER_ROLE\""
                  },
                  "value": "DEVELOPER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c",
                    "typeString": "literal_string \"DEVELOPER_ROLE\""
                  }
                ],
                "id": 4679,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "311:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4681,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "311:27:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4683,
              "nodeType": "StructuredDocumentation",
              "src": "345:42:25",
              "text": " @dev Transaction fee 0.7%"
            },
            "id": 4686,
            "mutability": "mutable",
            "name": "feeTransaction",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "391:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4684,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "391:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "3730",
              "id": 4685,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "415:2:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4687,
              "nodeType": "StructuredDocumentation",
              "src": "422:64:25",
              "text": " @dev Burn percentage of the transaction fee 50%"
            },
            "id": 4690,
            "mutability": "mutable",
            "name": "burnFee",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "490:21:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4688,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "490:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 4689,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "507:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4691,
              "nodeType": "StructuredDocumentation",
              "src": "516:59:25",
              "text": " @dev Developers fee of the transaction 25%"
            },
            "id": 4694,
            "mutability": "mutable",
            "name": "devFee",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "579:20:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4692,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "579:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 4693,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "595:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4695,
              "nodeType": "StructuredDocumentation",
              "src": "604:55:25",
              "text": " @dev Holder fee of the transaction 25%"
            },
            "id": 4698,
            "mutability": "mutable",
            "name": "holderFee",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "663:23:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4696,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "663:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 4697,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "682:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4707,
              "nodeType": "Block",
              "src": "707:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4702,
                        "name": "DEVELOPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4682,
                        "src": "725:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4703,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3179,
                          "src": "741:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "741:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4701,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "714:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4706,
                  "nodeType": "ExpressionStatement",
                  "src": "714:40:25"
                }
              ]
            },
            "id": 4708,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:25"
            },
            "returnParameters": {
              "id": 4700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:25"
            },
            "scope": 4811,
            "src": "693:67:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4716,
              "nodeType": "Block",
              "src": "898:34:25",
              "statements": [
                {
                  "expression": {
                    "id": 4714,
                    "name": "feeTransaction",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4686,
                    "src": "912:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4713,
                  "id": 4715,
                  "nodeType": "Return",
                  "src": "905:21:25"
                }
              ]
            },
            "documentation": {
              "id": 4709,
              "nodeType": "StructuredDocumentation",
              "src": "766:70:25",
              "text": " @dev Get transaction fee to pay for every transaction"
            },
            "functionSelector": "85d79102",
            "id": 4717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTransactionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:2:25"
            },
            "returnParameters": {
              "id": 4713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4712,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4717,
                  "src": "890:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4711,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:8:25"
            },
            "scope": 4811,
            "src": "840:92:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4727,
              "nodeType": "Block",
              "src": "1061:34:25",
              "statements": [
                {
                  "expression": {
                    "id": 4725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4723,
                      "name": "feeTransaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4686,
                      "src": "1068:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4724,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4720,
                      "src": "1085:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1068:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4726,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:21:25"
                }
              ]
            },
            "documentation": {
              "id": 4718,
              "nodeType": "StructuredDocumentation",
              "src": "938:70:25",
              "text": " @dev Set transaction fee to pay for every transaction"
            },
            "functionSelector": "b45940f2",
            "id": 4728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTransactionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4720,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "1039:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4719,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:13:25"
            },
            "returnParameters": {
              "id": 4722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:0:25"
            },
            "scope": 4811,
            "src": "1012:83:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4736,
              "nodeType": "Block",
              "src": "1212:26:25",
              "statements": [
                {
                  "expression": {
                    "id": 4734,
                    "name": "devFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4694,
                    "src": "1226:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4733,
                  "id": 4735,
                  "nodeType": "Return",
                  "src": "1219:13:25"
                }
              ]
            },
            "documentation": {
              "id": 4729,
              "nodeType": "StructuredDocumentation",
              "src": "1101:56:25",
              "text": " @dev Get devs fee for every transaction"
            },
            "functionSelector": "46e50994",
            "id": 4737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDevsFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:2:25"
            },
            "returnParameters": {
              "id": 4733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4732,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4737,
                  "src": "1204:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4731,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:8:25"
            },
            "scope": 4811,
            "src": "1161:77:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4747,
              "nodeType": "Block",
              "src": "1346:26:25",
              "statements": [
                {
                  "expression": {
                    "id": 4745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4743,
                      "name": "devFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4694,
                      "src": "1353:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4744,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4740,
                      "src": "1362:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1353:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4746,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:13:25"
                }
              ]
            },
            "documentation": {
              "id": 4738,
              "nodeType": "StructuredDocumentation",
              "src": "1244:56:25",
              "text": " @dev Set devs fee for every transaction"
            },
            "functionSelector": "71867b23",
            "id": 4748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDevsFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4740,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4748,
                  "src": "1324:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4739,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:13:25"
            },
            "returnParameters": {
              "id": 4742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:0:25"
            },
            "scope": 4811,
            "src": "1304:68:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4756,
              "nodeType": "Block",
              "src": "1489:27:25",
              "statements": [
                {
                  "expression": {
                    "id": 4754,
                    "name": "burnFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4690,
                    "src": "1503:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4753,
                  "id": 4755,
                  "nodeType": "Return",
                  "src": "1496:14:25"
                }
              ]
            },
            "documentation": {
              "id": 4749,
              "nodeType": "StructuredDocumentation",
              "src": "1378:56:25",
              "text": " @dev Get burn fee for every transaction"
            },
            "functionSelector": "aa4b10d1",
            "id": 4757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBurnFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1457:2:25"
            },
            "returnParameters": {
              "id": 4753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4752,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4757,
                  "src": "1481:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4751,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:8:25"
            },
            "scope": 4811,
            "src": "1438:78:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4767,
              "nodeType": "Block",
              "src": "1624:27:25",
              "statements": [
                {
                  "expression": {
                    "id": 4765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4763,
                      "name": "burnFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4690,
                      "src": "1631:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4764,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4760,
                      "src": "1641:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1631:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4766,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:14:25"
                }
              ]
            },
            "documentation": {
              "id": 4758,
              "nodeType": "StructuredDocumentation",
              "src": "1522:56:25",
              "text": " @dev Set burn fee for every transaction"
            },
            "functionSelector": "49de5f87",
            "id": 4768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4760,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "1602:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4759,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1601:13:25"
            },
            "returnParameters": {
              "id": 4762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1624:0:25"
            },
            "scope": 4811,
            "src": "1582:69:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4776,
              "nodeType": "Block",
              "src": "1772:29:25",
              "statements": [
                {
                  "expression": {
                    "id": 4774,
                    "name": "holderFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4698,
                    "src": "1786:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4773,
                  "id": 4775,
                  "nodeType": "Return",
                  "src": "1779:16:25"
                }
              ]
            },
            "documentation": {
              "id": 4769,
              "nodeType": "StructuredDocumentation",
              "src": "1657:58:25",
              "text": " @dev Get holder fee for every transaction"
            },
            "functionSelector": "faa271ff",
            "id": 4777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHolderFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1740:2:25"
            },
            "returnParameters": {
              "id": 4773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4772,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4777,
                  "src": "1764:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1763:8:25"
            },
            "scope": 4811,
            "src": "1719:82:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4787,
              "nodeType": "Block",
              "src": "1913:29:25",
              "statements": [
                {
                  "expression": {
                    "id": 4785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4783,
                      "name": "holderFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4698,
                      "src": "1920:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4784,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4780,
                      "src": "1932:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1920:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4786,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:16:25"
                }
              ]
            },
            "documentation": {
              "id": 4778,
              "nodeType": "StructuredDocumentation",
              "src": "1807:58:25",
              "text": " @dev Set holder fee for every transaction"
            },
            "functionSelector": "ee4b4307",
            "id": 4788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setHolderFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4780,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4788,
                  "src": "1891:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4779,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:13:25"
            },
            "returnParameters": {
              "id": 4782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1913:0:25"
            },
            "scope": 4811,
            "src": "1869:73:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4798,
              "nodeType": "Block",
              "src": "1990:47:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4794,
                        "name": "DEVELOPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4682,
                        "src": "2007:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4795,
                        "name": "_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4790,
                        "src": "2023:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4793,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1997:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1997:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4797,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:34:25"
                }
              ]
            },
            "functionSelector": "b91d3ace",
            "id": 4799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDev",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4790,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 4799,
                  "src": "1964:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:17:25"
            },
            "returnParameters": {
              "id": 4792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1990:0:25"
            },
            "scope": 4811,
            "src": "1948:89:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4809,
              "nodeType": "Block",
              "src": "2088:48:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4805,
                        "name": "DEVELOPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4682,
                        "src": "2106:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4806,
                        "name": "_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4801,
                        "src": "2122:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4804,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2095:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:35:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4808,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:35:25"
                }
              ]
            },
            "functionSelector": "c4026d7b",
            "id": 4810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeDev",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4801,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 4810,
                  "src": "2062:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2061:17:25"
            },
            "returnParameters": {
              "id": 4803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2088:0:25"
            },
            "scope": 4811,
            "src": "2043:93:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4812,
        "src": "198:1941:25"
      }
    ],
    "src": "33:2108:25"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/library/TransactionFee.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "AccessControlEnumerable": [
        433
      ],
      "Context": [
        3189
      ],
      "ERC165": [
        3416
      ],
      "ERC20": [
        1182
      ],
      "EnumerableSet": [
        4115
      ],
      "IAccessControl": [
        506
      ],
      "IAccessControlEnumerable": [
        531
      ],
      "IERC165": [
        3428
      ],
      "IERC20": [
        1260
      ],
      "IERC20Metadata": [
        1285
      ],
      "Strings": [
        3392
      ],
      "TransactionFee": [
        4811
      ]
    },
    "id": 4812,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4671,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:25"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4672,
        "nodeType": "ImportDirective",
        "scope": 4812,
        "sourceUnit": 1183,
        "src": "69:55:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "id": 4673,
        "nodeType": "ImportDirective",
        "scope": 4812,
        "sourceUnit": 434,
        "src": "126:68:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4674,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1182,
              "src": "234:5:25"
            },
            "id": 4675,
            "nodeType": "InheritanceSpecifier",
            "src": "234:5:25"
          },
          {
            "baseName": {
              "id": 4676,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 433,
              "src": "241:23:25"
            },
            "id": 4677,
            "nodeType": "InheritanceSpecifier",
            "src": "241:23:25"
          }
        ],
        "contractDependencies": [
          308,
          433,
          506,
          531,
          1182,
          1260,
          1285,
          3189,
          3416,
          3428
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 4811,
        "linearizedBaseContracts": [
          4811,
          433,
          308,
          3416,
          3428,
          531,
          506,
          1182,
          1285,
          1260,
          3189
        ],
        "name": "TransactionFee",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "9103a0e0",
            "id": 4682,
            "mutability": "constant",
            "name": "DEVELOPER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "270:68:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 4678,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "444556454c4f5045525f524f4c45",
                  "id": 4680,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "321:16:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c",
                    "typeString": "literal_string \"DEVELOPER_ROLE\""
                  },
                  "value": "DEVELOPER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_4504b9dfd7400a1522f49a8b4a100552da9236849581fd59b7363eb48c6a474c",
                    "typeString": "literal_string \"DEVELOPER_ROLE\""
                  }
                ],
                "id": 4679,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "311:9:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 4681,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "311:27:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4683,
              "nodeType": "StructuredDocumentation",
              "src": "345:42:25",
              "text": " @dev Transaction fee 0.7%"
            },
            "id": 4686,
            "mutability": "mutable",
            "name": "feeTransaction",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "391:26:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4684,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "391:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "3730",
              "id": 4685,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "415:2:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4687,
              "nodeType": "StructuredDocumentation",
              "src": "422:64:25",
              "text": " @dev Burn percentage of the transaction fee 50%"
            },
            "id": 4690,
            "mutability": "mutable",
            "name": "burnFee",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "490:21:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4688,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "490:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 4689,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "507:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4691,
              "nodeType": "StructuredDocumentation",
              "src": "516:59:25",
              "text": " @dev Developers fee of the transaction 25%"
            },
            "id": 4694,
            "mutability": "mutable",
            "name": "devFee",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "579:20:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4692,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "579:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 4693,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "595:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4695,
              "nodeType": "StructuredDocumentation",
              "src": "604:55:25",
              "text": " @dev Holder fee of the transaction 25%"
            },
            "id": 4698,
            "mutability": "mutable",
            "name": "holderFee",
            "nodeType": "VariableDeclaration",
            "scope": 4811,
            "src": "663:23:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 4696,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "663:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 4697,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "682:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4707,
              "nodeType": "Block",
              "src": "707:53:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4702,
                        "name": "DEVELOPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4682,
                        "src": "725:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4703,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3179,
                          "src": "741:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "741:12:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4701,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "714:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:40:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4706,
                  "nodeType": "ExpressionStatement",
                  "src": "714:40:25"
                }
              ]
            },
            "id": 4708,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:25"
            },
            "returnParameters": {
              "id": 4700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:25"
            },
            "scope": 4811,
            "src": "693:67:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4716,
              "nodeType": "Block",
              "src": "898:34:25",
              "statements": [
                {
                  "expression": {
                    "id": 4714,
                    "name": "feeTransaction",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4686,
                    "src": "912:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4713,
                  "id": 4715,
                  "nodeType": "Return",
                  "src": "905:21:25"
                }
              ]
            },
            "documentation": {
              "id": 4709,
              "nodeType": "StructuredDocumentation",
              "src": "766:70:25",
              "text": " @dev Get transaction fee to pay for every transaction"
            },
            "functionSelector": "85d79102",
            "id": 4717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTransactionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:2:25"
            },
            "returnParameters": {
              "id": 4713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4712,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4717,
                  "src": "890:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4711,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:8:25"
            },
            "scope": 4811,
            "src": "840:92:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4727,
              "nodeType": "Block",
              "src": "1061:34:25",
              "statements": [
                {
                  "expression": {
                    "id": 4725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4723,
                      "name": "feeTransaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4686,
                      "src": "1068:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4724,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4720,
                      "src": "1085:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1068:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4726,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:21:25"
                }
              ]
            },
            "documentation": {
              "id": 4718,
              "nodeType": "StructuredDocumentation",
              "src": "938:70:25",
              "text": " @dev Set transaction fee to pay for every transaction"
            },
            "functionSelector": "b45940f2",
            "id": 4728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTransactionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4720,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "1039:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4719,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:13:25"
            },
            "returnParameters": {
              "id": 4722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:0:25"
            },
            "scope": 4811,
            "src": "1012:83:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4736,
              "nodeType": "Block",
              "src": "1212:26:25",
              "statements": [
                {
                  "expression": {
                    "id": 4734,
                    "name": "devFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4694,
                    "src": "1226:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4733,
                  "id": 4735,
                  "nodeType": "Return",
                  "src": "1219:13:25"
                }
              ]
            },
            "documentation": {
              "id": 4729,
              "nodeType": "StructuredDocumentation",
              "src": "1101:56:25",
              "text": " @dev Get devs fee for every transaction"
            },
            "functionSelector": "46e50994",
            "id": 4737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDevsFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:2:25"
            },
            "returnParameters": {
              "id": 4733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4732,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4737,
                  "src": "1204:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4731,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:8:25"
            },
            "scope": 4811,
            "src": "1161:77:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4747,
              "nodeType": "Block",
              "src": "1346:26:25",
              "statements": [
                {
                  "expression": {
                    "id": 4745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4743,
                      "name": "devFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4694,
                      "src": "1353:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4744,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4740,
                      "src": "1362:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1353:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4746,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:13:25"
                }
              ]
            },
            "documentation": {
              "id": 4738,
              "nodeType": "StructuredDocumentation",
              "src": "1244:56:25",
              "text": " @dev Set devs fee for every transaction"
            },
            "functionSelector": "71867b23",
            "id": 4748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDevsFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4740,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4748,
                  "src": "1324:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4739,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:13:25"
            },
            "returnParameters": {
              "id": 4742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:0:25"
            },
            "scope": 4811,
            "src": "1304:68:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4756,
              "nodeType": "Block",
              "src": "1489:27:25",
              "statements": [
                {
                  "expression": {
                    "id": 4754,
                    "name": "burnFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4690,
                    "src": "1503:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4753,
                  "id": 4755,
                  "nodeType": "Return",
                  "src": "1496:14:25"
                }
              ]
            },
            "documentation": {
              "id": 4749,
              "nodeType": "StructuredDocumentation",
              "src": "1378:56:25",
              "text": " @dev Get burn fee for every transaction"
            },
            "functionSelector": "aa4b10d1",
            "id": 4757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBurnFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1457:2:25"
            },
            "returnParameters": {
              "id": 4753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4752,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4757,
                  "src": "1481:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4751,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:8:25"
            },
            "scope": 4811,
            "src": "1438:78:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4767,
              "nodeType": "Block",
              "src": "1624:27:25",
              "statements": [
                {
                  "expression": {
                    "id": 4765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4763,
                      "name": "burnFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4690,
                      "src": "1631:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4764,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4760,
                      "src": "1641:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1631:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4766,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:14:25"
                }
              ]
            },
            "documentation": {
              "id": 4758,
              "nodeType": "StructuredDocumentation",
              "src": "1522:56:25",
              "text": " @dev Set burn fee for every transaction"
            },
            "functionSelector": "49de5f87",
            "id": 4768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4760,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "1602:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4759,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1601:13:25"
            },
            "returnParameters": {
              "id": 4762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1624:0:25"
            },
            "scope": 4811,
            "src": "1582:69:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4776,
              "nodeType": "Block",
              "src": "1772:29:25",
              "statements": [
                {
                  "expression": {
                    "id": 4774,
                    "name": "holderFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4698,
                    "src": "1786:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 4773,
                  "id": 4775,
                  "nodeType": "Return",
                  "src": "1779:16:25"
                }
              ]
            },
            "documentation": {
              "id": 4769,
              "nodeType": "StructuredDocumentation",
              "src": "1657:58:25",
              "text": " @dev Get holder fee for every transaction"
            },
            "functionSelector": "faa271ff",
            "id": 4777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHolderFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1740:2:25"
            },
            "returnParameters": {
              "id": 4773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4772,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4777,
                  "src": "1764:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1763:8:25"
            },
            "scope": 4811,
            "src": "1719:82:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4787,
              "nodeType": "Block",
              "src": "1913:29:25",
              "statements": [
                {
                  "expression": {
                    "id": 4785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4783,
                      "name": "holderFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4698,
                      "src": "1920:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4784,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4780,
                      "src": "1932:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1920:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 4786,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:16:25"
                }
              ]
            },
            "documentation": {
              "id": 4778,
              "nodeType": "StructuredDocumentation",
              "src": "1807:58:25",
              "text": " @dev Set holder fee for every transaction"
            },
            "functionSelector": "ee4b4307",
            "id": 4788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setHolderFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4780,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4788,
                  "src": "1891:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4779,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:13:25"
            },
            "returnParameters": {
              "id": 4782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1913:0:25"
            },
            "scope": 4811,
            "src": "1869:73:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4798,
              "nodeType": "Block",
              "src": "1990:47:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4794,
                        "name": "DEVELOPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4682,
                        "src": "2007:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4795,
                        "name": "_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4790,
                        "src": "2023:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4793,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1997:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1997:34:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4797,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:34:25"
                }
              ]
            },
            "functionSelector": "b91d3ace",
            "id": 4799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDev",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4790,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 4799,
                  "src": "1964:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:17:25"
            },
            "returnParameters": {
              "id": 4792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1990:0:25"
            },
            "scope": 4811,
            "src": "1948:89:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4809,
              "nodeType": "Block",
              "src": "2088:48:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4805,
                        "name": "DEVELOPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4682,
                        "src": "2106:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4806,
                        "name": "_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4801,
                        "src": "2122:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4804,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2095:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:35:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4808,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:35:25"
                }
              ]
            },
            "functionSelector": "c4026d7b",
            "id": 4810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeDev",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4801,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 4810,
                  "src": "2062:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2061:17:25"
            },
            "returnParameters": {
              "id": 4803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2088:0:25"
            },
            "scope": 4811,
            "src": "2043:93:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4812,
        "src": "198:1941:25"
      }
    ],
    "src": "33:2108:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-11T21:55:00.679Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getBurnFee()": {
        "details": "Get burn fee for every transaction"
      },
      "getDevsFee()": {
        "details": "Get devs fee for every transaction"
      },
      "getHolderFee()": {
        "details": "Get holder fee for every transaction"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getTransactionFee()": {
        "details": "Get transaction fee to pay for every transaction"
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setBurnFee(uint16)": {
        "details": "Set burn fee for every transaction"
      },
      "setDevsFee(uint16)": {
        "details": "Set devs fee for every transaction"
      },
      "setHolderFee(uint16)": {
        "details": "Set holder fee for every transaction"
      },
      "setTransactionFee(uint16)": {
        "details": "Set transaction fee to pay for every transaction"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "stateVariables": {
      "burnFee": {
        "details": "Burn percentage of the transaction fee 50%"
      },
      "devFee": {
        "details": "Developers fee of the transaction 25%"
      },
      "feeTransaction": {
        "details": "Transaction fee 0.7%"
      },
      "holderFee": {
        "details": "Holder fee of the transaction 25%"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}